{"version":3,"sources":["Routes.js","components/Nav/Nav.js","views/Home/Home.js","components/Project/Project.js","views/Projects/Projects.js","components/Experience/Experience.js","views/Experiences/Experiences.js","App.js","serviceWorker.js","index.js"],"names":["Routes","Home","Projects","Experiences","Nav","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currLocation","react_default","a","createElement","className","react_router_dom","to","href","target","getLinkClassName","tab","handleLinks","React","Component","title","beforeLogo","link","logo","additionalInfo","concat","src","renderBasicInfo","Nav_Nav_Nav","Project","projectImage","projectName","renderTags","description","projectTags","map","tag","renderProjectImage","renderProjectContent","renderProject","Project_Project_Project","id","Experience","experienceImage","experienceName","experienceTags","renderExperienceImage","renderExperienceContent","renderExperience","Experience_Experience_Experience","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b572ec7.chunk.js","sourcesContent":["export const Routes = {\n  Home: \"/\",\n  Projects: \"/projects\",\n  Experiences: \"/experience\", \n}","import React from 'react';\nimport './Nav.css';\nimport {Routes} from '../../Routes';\nimport {Link} from 'react-router-dom';\n\nexport default class Nav extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n  handleLinks() {\n    switch(this.props.currLocation) {\n      case \"Home\":\n        return(\n          <div className={'content-nav centered'}>          \n            <div><Link to={Routes.Experiences} className={'link-nav'}>experience</Link></div>\n            <div className={'circle-nav'}/>\n            <div><Link to={Routes.Projects} className={'link-nav'}>projects</Link></div>            \n            <div className={'circle-nav'}/>\n            <div><a href={'./Resume.pdf'} target='_blank' className={'link-nav'}>resume</a></div>\n          </div>\n        );\n      default:\n        return(\n          <div className={'content-nav'}>   \n            <div>\n              <Link to={Routes.Home} className={'link-nav-blue'}>about</Link>\n            </div>\n            <div className={'circle-nav-blue'}/>\n            <div>\n              <Link to={Routes.Experiences} className={this.getLinkClassName('Experiences')}>experience</Link>\n            </div>\n            <div className={'circle-nav-blue'}/>                 \n            <div>\n              <Link to={Routes.Projects} className={this.getLinkClassName('Projects')}>projects</Link>\n            </div>\n            <div className={'circle-nav-blue'}/>\n            <div><a href={'./Resume.pdf'} target='_blank' className={this.getLinkClassName('Resume')}>resume</a></div>                    \n          </div>\n        ); \n    }\n  }\n\n  getLinkClassName(tab){\n    return ('link-nav-blue ' + (this.props.currLocation === tab ? 'active': '')) ;\n  } \n\n\n  render() {\n    \n    return(\n      <div className='container-nav'>\n        {this.handleLinks()}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Home.css';\nimport Nav from '../../components/Nav/Nav';\n\nexport default class Home extends React.Component {\n\n\n  renderBasicInfo(title, beforeLogo, link, logo, additionalInfo){\n    return (\n    <div className={'basicInfo-home'}>\n      <div>{`${title}: ${beforeLogo}`}</div>\n      <div className={'logoContainer-home'}>\n        <a href={link}>\n          <img className={'logo-home'} src={logo}/>\n        </a>\n      </div>\n      <div className={'additionalInfo-home'}>{additionalInfo}</div>\n    </div>\n    )\n  }\n\n  render() {\n    \n    return(\n      <div className={'container-home'}>\n        <div className={'contentContainer-home'}>\n          <div className={'header-home'}>Hey!</div>\n          <div className={'content-home'}>\n            <p>\n              My name is <strong> Anirudh Subramanyam (Ani)</strong>, and I'm a <strong>Software Developer</strong>.\n              I aim to increasingly integrate accessible technology into society, especially in <strong>health care</strong> and <strong>education</strong>. I believe \n              that my exposure to various cultures having lived and studied in cities such as Mumbai, Bangalore, Singapore, London and Seattle, \n              and my involvment in the community provides me a strong perspective to build <strong>user-centered technology.</strong>\n            </p>\n          </div>\n          {this.renderBasicInfo('Current', 'Associate 2 Software Engineer', 'https://www.pwc.com/', '../img/pwc_logo.svg', 'at Tampa, FL.')}\n          {this.renderBasicInfo('Education','Bachelor of Science in Informatics','https://www.washington.edu/', '../img/uw_logo.svg', 'at Seattle, WA.')}\n          <Nav currLocation=\"Home\"/>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Project.css';\n\nexport default class Project extends React.Component {  \n  constructor(props){\n    super(props);\n  };\n\n  renderProjectImage() {\n    return (\n      <div className={'imageContainer-singleProject'}>\n        <a href={this.props.link} target=\"_blank\">\n          <img src={this.props.projectImage}/>\n        </a>\n      </div>\n    )\n  }\n\n  renderProjectContent() {\n    return(\n      <div className={'contentContainer-singleProject'}>\n        <div className={'title-singleProject'}>{this.props.projectName}</div>\n        <div className={'tags-singleProject'}>\n          {this.renderTags()}\n        </div>\n        <div className={'description-singleProject'}>{this.props.description}</div>        \n      </div>\n    );\n  }\n  renderTags() {\n    return this.props.projectTags.map((tag) => {\n      return <div className={'tag-singleProject'}>{tag}</div>\n    });\n  }\n\n  renderProject() {\n    return (\n      <div className={'container-singleProject'}>        \n        {this.renderProjectImage()}\n        {this.renderProjectContent()}\n      </div>\n    )          \n  }\n\n  render() {\n    \n    return(\n      <div className={'singleProject'}>\n        {this.renderProject()}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Projects.css';\nimport Nav from '../../components/Nav/Nav';\nimport Project from '../../components/Project/Project';\n\nexport default class Projects extends React.Component {  \n\n  render() {\n    \n    return(\n      <div className={'container-projects'}>\n        <Nav currLocation='Projects'/>\n        <Project id = {0} \n        link=\"https://novantapp.com\"\n        projectName=\"Novant\"\n        projectImage={'../img/Novant.svg'} \n        projectTags={['Go', 'MySQL', 'Redis', 'React', 'React Native', 'Redux']} \n        description=\"Developed a mobile and web platform that facilitates the marketplace for job shifts to be listed by businesses, applied for and worked by a supply of trusted\n        employees. Architected and built RESTful backend server for the business logic.\"\n      />\n        <Project id = {1} \n        link=\"https://github.com/aaronluannguyen/CourtVision\"\n        projectName=\"CourtVision\"\n        projectImage={'../img/CourtVision.svg'} \n        projectTags={['Swift', 'iOS', 'Firebase']}\n        description = {\n          <p>Court vision is an iOS application that connects people who want to play basketball, by providing a platform that allows users\n          to organize matches around them to compete with their teams. It has the following components: \n          <ul>\n              <li>Authentication: Allows users to sign up (backed by Firebase) with an email to use the application.</li>\n              <li>User Profile: Allows users to build profiles with their information such as age, height, weight, position, etc.</li>\n              <li>Team Roster: Allows to join teams and see their team rosters containing other user profiles. Assigned an admin to manage team.</li>\n              <li>Game Map: Shows nearby games hosted by teams with location and time. </li>\n              <li>Game Matchmaking: Allows to create games, teams to join games and manages result of games. </li>\n              <li>Ranking: Shows team rankings based on wins and losses.</li>\n          </ul>\n          </p>\n        }/>        \n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Experience.css';\n\nexport default class Experience extends React.Component {  \n  constructor(props){\n    super(props);\n  };\n\n  renderExperienceImage() {\n    return (\n      <div className={'imageContainer-singleExperience'}>\n        <a href={this.props.link} target=\"_blank\">\n          <img src={this.props.experienceImage}/>\n        </a>\n      </div>\n    )\n  }\n\n  renderExperienceContent() {\n    return(\n      <div className={'contentContainer-singleExperience'}>\n        <div className={'title-singleExperience'}>{this.props.experienceName}</div>\n        <div className={'tags-singleExperience'}>\n          {this.renderTags()}\n        </div>\n        <div className={'description-singleExperience'}>{this.props.description}</div>        \n      </div>\n    );\n  }\n  renderTags() {\n    return this.props.experienceTags.map((tag) => {\n      return <div className={'tag-singleExperience'}>{tag}</div>\n    });\n  }\n\n  renderExperience() {\n    return (\n      <div className={'container-singleExperience'}>        \n        {this.renderExperienceImage()}\n        {this.renderExperienceContent()}\n      </div>\n    )          \n  }\n\n  render() {\n    \n    return(\n      <div className={'singleExperience'}>\n        {this.renderExperience()}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Experiences.css';\nimport Nav from '../../components/Nav/Nav';\nimport Experience from '../../components/Experience/Experience';\n\nexport default class Experiences extends React.Component {\n  render() {\n    \n    return(\n      <div className={'container-experiences'}>\n      <Nav currLocation='Experiences'/>\n      <Experience\n      link = \"https://www.pwc.com/us/en/careers/why-pwc/what-we-do/what-we-do-products-and-technology.html\"\n      experienceName=\"PriceWaterhouseCoopers\"\n      experienceImage={'../img/PwC.svg'} \n      experienceTags={['Scala', 'Kafka', 'Cassandra', 'Couchbase', 'RabbitMQ', 'Lagom', 'Akka', 'Docker']} \n      description = {\n        <ul> \n          <li> Lead development of back-end services for $2M client project. </li>\n          <li> Implement middle-tier services using Scala and with enterprise systems. </li>\n          <li> Troubleshoot production issues. </li>\n          <li> Coordinate with several teams to gather requirements. </li>\n          <li> Build documentation for services.</li>\n       </ul>}\n      />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport {Routes} from './Routes';\nimport {HashRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport Home from './views/Home/Home';\nimport Projects from './views/Projects/Projects';\nimport Experiences from './views/Experiences/Experiences';\n\nfunction App() {\n  return (    \n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path={Routes.Home} component={Home}/>\n          <Route path={Routes.Projects} component={Projects}/>\n          <Route path={Routes.Experiences} component={Experiences}/>   \n          <Redirect to={Routes.Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}